h1. JQuery Button Toggler

p. Button toggling.  Will write more later.

* TODO: Find a better name than toggler

h2. Features

- Toggle css classes on a button along with values


Brain dump:

- If applied to an input element
	- Hide input element
	- Insert <a> tag with initial button state
	- When button is clicked update input element's value
- Otherwise
	- applied to any other element and we'll have to store the value in a data attribute



- Default state:
	- css class: button
	- states: [
		{ text: "Yes", value=true, class="positive"},
		{ text: "No", value=false, class="negative"}
	]
	
So if you have this:

<input class="imAbutton" type="text"/>

and do this:

$(".imAbutton").toggler();

you would end up with this:

<input class="imAbutton" type="hidden" value="true"/>
<a href="#" class="button positive">Yes</a>

if you clicked the button you would end up with this:

<input class="imAbutton" type="hidden" value="false"/>
<a href="#" class="button negative">No</a>


You could then do this with many different states:

$(".imAbutton").toggler({
	states: [
		{ text: "Stop", value="stop", class="red"},
		{ text: "Slow Down", value="slow", class="yellow"},
		{ text: "Go", value="go", class="green"}
	]
});

you would end up with the following states (in order of clicks, starting with the initial state):

State 1:

<input class="imAbutton" type="hidden" value="stop"/>
<a href="#" class="button red">Stop</a>


State 2:

<input class="imAbutton" type="hidden" value="slow"/>
<a href="#" class="button yellow">Slow Down</a>


State 3:

<input class="imAbutton" type="hidden" value="go"/>
<a href="#" class="button green">Go</a>



<h1>Styling</h1>

Styling is up to you.  

TODO
- when classes are applied
- a generic example
